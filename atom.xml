<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Layne</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://gengxuelei.github.io/"/>
  <updated>2019-03-20T06:43:51.536Z</updated>
  <id>https://gengxuelei.github.io/</id>
  
  <author>
    <name>Layne</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Hello World</title>
    <link href="https://gengxuelei.github.io/2019/03/20/hello-world/"/>
    <id>https://gengxuelei.github.io/2019/03/20/hello-world/</id>
    <published>2019-03-20T06:43:51.536Z</published>
    <updated>2019-03-20T06:43:51.536Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><a id="more"></a><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&quot;https://hexo.io/docs/troubleshooting.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;Quick-Start&quot;&gt;&lt;a href=&quot;#Quick-Start&quot; class=&quot;headerlink&quot; title=&quot;Quick Start&quot;&gt;&lt;/a&gt;Quick Start&lt;/h2&gt;&lt;h3 id=&quot;Create-a-new-post&quot;&gt;&lt;a href=&quot;#Create-a-new-post&quot; class=&quot;headerlink&quot; title=&quot;Create a new post&quot;&gt;&lt;/a&gt;Create a new post&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo new &lt;span class=&quot;string&quot;&gt;&quot;My New Post&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;More info: &lt;a href=&quot;https://hexo.io/docs/writing.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Writing&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>git小记</title>
    <link href="https://gengxuelei.github.io/2017/12/27/git%E5%B0%8F%E8%AE%B0/"/>
    <id>https://gengxuelei.github.io/2017/12/27/git小记/</id>
    <published>2017-12-27T06:21:30.000Z</published>
    <updated>2019-03-20T07:51:55.958Z</updated>
    
    <content type="html"><![CDATA[<h2 id="git工作流程"><a href="#git工作流程" class="headerlink" title="git工作流程"></a>git工作流程</h2><p><img src="/imgs/git小记/git工作流程.png" alt="git工作流程" title="git工作流程"></p><h2 id="git配置"><a href="#git配置" class="headerlink" title="git配置"></a>git配置</h2><a id="more"></a><p>/etc/gitconfig 文件：系统中对所有用户都普遍适用的配置。若使用 git config 时用 –system 选项，读写的就是这个文件。<br>~/.gitconfig 文件：用户目录下的配置文件只适用于该用户。若使用 git config 时用 –global 选项，读写的就是这个文件。<br>当前项目的 Git 目录中的配置文件（也就是工作目录中的 .git/config 文件）：这里的配置仅仅针对当前项目有效。每一个级别的配置都会覆盖上层的相同配置，所以 .git/config 里的配置会覆盖 /etc/gitconfig 中的同名变量。</p><p><strong>查看配置信息</strong><br>要检查已有的配置信息，可以使用 git config -l 命令：<br>有时候会看到重复的变量名，那就说明它们来自不同的配置文件（比如 /etc/gitconfig 和 ~/.gitconfig），不过最终 Git 实际采用的是最后一个。</p><p><strong>配置命令</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#1. 设置用户名邮箱 </span></span><br><span class="line">$ git config --global user.name <span class="string">"Your Name"</span></span><br><span class="line">$ git config --global user.email <span class="string">"email@example.com"</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#2. https替代git协议</span></span><br><span class="line">$ git config --global url.<span class="string">"https://"</span>.insteadof <span class="string">"git://"</span></span><br><span class="line">$ git config --global url.<span class="string">"https://github.com/"</span>.insteadof <span class="string">"git@github.com:"</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#3. 设置代理 </span></span><br><span class="line">$ git config --global http.proxy socks5://127.0.0.1:1080</span><br><span class="line">$ git config --global https.proxy socks5://127.0.0.1:1080</span><br><span class="line">取消:</span><br><span class="line">$ git config --global --<span class="built_in">unset</span> http.proxy</span><br><span class="line">$ git config --global --<span class="built_in">unset</span> https.proxy</span><br><span class="line"></span><br><span class="line"><span class="comment">#4. 取消crlf自动转换为lf</span></span><br><span class="line">$ git config --global core.autocrlf <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#5. 使用simple模式（只推送当前分支到远端）而不是matching（推送本地所有分支到远端）</span></span><br><span class="line">$ git config --global push.default simple</span><br><span class="line"></span><br><span class="line"><span class="comment">#6. Git提交时发生SSL certificate problem错误的解决方法</span></span><br><span class="line">$ git config --global http.sslVerify <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#7. Git提交时发生 error: RPC failed;</span></span><br><span class="line">解决办法，把git的buffer扩充到500M：</span><br><span class="line">$ git config http.postBuffer 524288000</span><br><span class="line"></span><br><span class="line"><span class="comment">#8. 使用以下命令生成SSH Key：</span></span><br><span class="line">$ ssh-keygen -t rsa -C <span class="string">"youremail@example.com"</span></span><br><span class="line">后面的your_email@example.com改为你在github上注册的邮箱，</span><br><span class="line">之后会要求确认路径和输入密码，我们这使用默认的一路回车就行。</span><br><span class="line">成功的话会在~/下生成.ssh文件夹，进去，打开id_rsa.pub，复制里面的key。</span><br><span class="line">--&gt;</span><br><span class="line">回到github上，进入 Account Settings（账户配置），</span><br><span class="line">左边选择SSH Keys，Add SSH Key,title随便填，粘贴在你电脑上生成的key。</span><br></pre></td></tr></table></figure><p>参考：<br><a href="http://segmentfault.com/a/1190000002435496" target="_blank" rel="noopener">http://segmentfault.com/a/1190000002435496</a></p><h2 id="操作"><a href="#操作" class="headerlink" title="操作"></a>操作</h2><p><img src="/imgs/git小记/工作暂存版本库.jpg" alt="git工作暂存版本库" title="git工作暂存版本库"></p><ol><li><p>当执行 <code>git checkout .</code> 或者 <code>git checkout -- &lt;file&gt;</code> 命令时，会用暂存区全部或指定的文件替换工作区的文件。这个操作很危险，会清除工作区中未添加到暂存区的改动。</p></li><li><p>当执行 <code>git checkout HEAD .</code> 或者 <code>git checkout HEAD &lt;file&gt;</code> 命令时，会用 HEAD 指向的 master 分支中的全部或者部分文件替换暂存区和以及工作区中的文件。这个命令也是极具危险性的，因为不但会清除工作区中未提交的改动，也会清除暂存区中未提交的改动。</p></li><li><p>当执行 <code>git reset HEAD</code> 命令时，暂存区的目录树会被重写，被 master 分支指向的目录树所替换，但是工作区不受影响。</p></li></ol><p><em>git提交小技巧</em></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># git add -A = git add . + git add -u</span></span><br><span class="line"></span><br><span class="line">git add -A <span class="comment"># stages All</span></span><br><span class="line">git add .  <span class="comment"># stages new and modified, without deleted</span></span><br><span class="line">git add -u <span class="comment"># stages modified and deleted, without new</span></span><br></pre></td></tr></table></figure><h2 id="关于Crlf和lf的那些事"><a href="#关于Crlf和lf的那些事" class="headerlink" title="关于Crlf和lf的那些事:"></a>关于Crlf和lf的那些事:</h2><p><em>(fatal: CRLF would be replaced by LF )</em></p><p>CR回车 LF换行Windows/Dos CRLF \r\n<br>Linux/Unix LF \n<br>MacOS CR \r<br>解决方法是：打开命令行，进行设置，如果你是在Windows下开发，建议设置autocrlf为true。<br>2014/08/20 补充：如果你文件编码是UTF8并且包含中文文字，那还是把autocrlf设置为false，并且把所有文件转换为Linux编码（即LF\n），开启safecrlf检查。</p><p>一、AutoCRLF</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#提交时转换为LF，检出时转换为CRLF</span></span><br><span class="line">git config --global core.autocrlf <span class="literal">true</span>   </span><br><span class="line"></span><br><span class="line"><span class="comment">#提交时转换为LF，检出时不转换</span></span><br><span class="line">git config --global core.autocrlf input   </span><br><span class="line"></span><br><span class="line"><span class="comment">#提交检出均不转换</span></span><br><span class="line">git config --global core.autocrlf <span class="literal">false</span></span><br></pre></td></tr></table></figure><p>二、SafeCRLF</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#拒绝提交包含混合换行符的文件</span></span><br><span class="line">git config --global core.safecrlf <span class="literal">true</span>   </span><br><span class="line"></span><br><span class="line"><span class="comment">#允许提交包含混合换行符的文件</span></span><br><span class="line">git config --global core.safecrlf <span class="literal">false</span>   </span><br><span class="line"></span><br><span class="line"><span class="comment">#提交包含混合换行符的文件时给出警告</span></span><br><span class="line">git config --global core.safecrlf warn</span><br></pre></td></tr></table></figure><h2 id="bower"><a href="#bower" class="headerlink" title="bower"></a>bower</h2><p><strong>1. 代理</strong><br>在工程或用户主目录下，新建一个.bowerrc文件，文件内容是JSON格式：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&quot;proxy&quot; : &quot;socks5://127.0.0.1:1080&quot;,</span><br><span class="line">&quot;https-proxy&quot;: &quot;socks5://127.0.0.1:1080&quot;</span><br></pre></td></tr></table></figure></p><p><strong>2. shorthand-resolver</strong></p><p>默认值：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git://github.com/&#123;&#123;owner&#125;&#125;/&#123;&#123;package&#125;&#125;.git</span><br></pre></td></tr></table></figure><p>如果网络不通，或不能使用git，可以将其修改为<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&quot;shorthand-resolver&quot;: &quot;https://github.com/&#123;&#123;owner&#125;&#125;/&#123;&#123;package&#125;&#125;.git&quot;</span><br></pre></td></tr></table></figure></p><h2 id="综合"><a href="#综合" class="headerlink" title="综合"></a>综合</h2><p><em>.bowerrc</em></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">"proxy" : "socks5://127.0.0.1:1080",</span><br><span class="line">"https-proxy": "socks5://127.0.0.1:1080",</span><br><span class="line">"shorthand-resolver": "https://github.com/&#123;&#123;owner&#125;&#125;/&#123;&#123;package&#125;&#125;.git"</span><br></pre></td></tr></table></figure><h2 id="centos安装git"><a href="#centos安装git" class="headerlink" title="centos安装git"></a>centos安装git</h2><h3 id="最新git源码下载地址："><a href="#最新git源码下载地址：" class="headerlink" title="最新git源码下载地址："></a>最新git源码下载地址：</h3><p><a href="https://github.com/git/git/releases" target="_blank" rel="noopener">https://github.com/git/git/releases</a><br><a href="https://www.kernel.org/pub/software/scm/git/" target="_blank" rel="noopener">https://www.kernel.org/pub/software/scm/git/</a><br>可以手动下载下来在上传到服务器上面</p><h3 id="移除旧版本git"><a href="#移除旧版本git" class="headerlink" title="移除旧版本git"></a>移除旧版本git</h3><p>centos自带Git，7.x版本自带git 1.8.3.1（应该是，也可能不是），<br>安装新版本之前需要使用yun remove git卸载（安装后卸载也可以）。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@Git ~]<span class="comment"># git --version    ## 查看自带的版本</span></span><br><span class="line">git version 1.8.3.1</span><br><span class="line">[root@Git ~]<span class="comment"># yum remove git   ## 移除原来的版本</span></span><br></pre></td></tr></table></figure><h3 id="安装所需软件包"><a href="#安装所需软件包" class="headerlink" title="安装所需软件包"></a>安装所需软件包</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@Git ~]# yum install curl-devel expat-devel gettext-devel openssl-devel zlib-devel -y</span><br><span class="line">[root@Git ~]# yum install gcc-c++ perl-ExtUtils-MakeMaker autoconf automake libtool -y</span><br></pre></td></tr></table></figure><p>下载&amp;安装</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@Git ~]# cd /usr/src</span><br><span class="line">[root@Git ~]# wget https://www.kernel.org/pub/software/scm/git/git-2.7.3.tar.gz</span><br></pre></td></tr></table></figure><h3 id="解压"><a href="#解压" class="headerlink" title="解压"></a>解压</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@Git ~]<span class="comment"># tar xf git-2.7.3.tar.gz</span></span><br></pre></td></tr></table></figure><h3 id="配置编译安装"><a href="#配置编译安装" class="headerlink" title="配置编译安装"></a>配置编译安装</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@Git ~]# cd git-2.7.3</span><br><span class="line">[root@Git ~]# make configure</span><br><span class="line">[root@Git ~]# ./configure --prefix=/usr/git ##配置目录</span><br><span class="line">[root@Git ~]# make profix=/usr/git</span><br><span class="line">[root@Git ~]# make install</span><br></pre></td></tr></table></figure><h3 id="加入环境变量"><a href="#加入环境变量" class="headerlink" title="加入环境变量"></a>加入环境变量</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@Git ~]<span class="comment"># echo "export PATH=$PATH:/usr/git/bin" &gt;&gt; /etc/profile</span></span><br><span class="line">[root@Git ~]<span class="comment"># source /etc/profile</span></span><br></pre></td></tr></table></figure><h3 id="检查版本"><a href="#检查版本" class="headerlink" title="检查版本"></a>检查版本</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@Git git-2.7.3]# git --version </span><br><span class="line">git version 2.7.3</span><br></pre></td></tr></table></figure><p>参考文档：</p><p><a href="http://www.runoob.com/git/git-install-setup.html" target="_blank" rel="noopener">Git 安装配置 | 菜鸟教程</a></p><p><a href="http://www.runoob.com/git/git-tutorial.html" target="_blank" rel="noopener">Git教程 | 菜鸟教程</a></p><p><a href="http://www.bootcss.com/p/git-guide/" target="_blank" rel="noopener">git - 简易指南</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;git工作流程&quot;&gt;&lt;a href=&quot;#git工作流程&quot; class=&quot;headerlink&quot; title=&quot;git工作流程&quot;&gt;&lt;/a&gt;git工作流程&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;/imgs/git小记/git工作流程.png&quot; alt=&quot;git工作流程&quot; title=&quot;git工作流程&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;git配置&quot;&gt;&lt;a href=&quot;#git配置&quot; class=&quot;headerlink&quot; title=&quot;git配置&quot;&gt;&lt;/a&gt;git配置&lt;/h2&gt;
    
    </summary>
    
      <category term="后端" scheme="https://gengxuelei.github.io/categories/%E5%90%8E%E7%AB%AF/"/>
    
    
      <category term="git" scheme="https://gengxuelei.github.io/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>关于jwt的思考</title>
    <link href="https://gengxuelei.github.io/2017/12/27/%E5%85%B3%E4%BA%8Ejwt%E7%9A%84%E6%80%9D%E8%80%83/"/>
    <id>https://gengxuelei.github.io/2017/12/27/关于jwt的思考/</id>
    <published>2017-12-27T06:16:41.000Z</published>
    <updated>2019-03-20T06:43:51.537Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>关于jwt的思考<br>jwt是个做用户权限认证的方案，科普的内容参考相关文档吧，这里提出几个关于jwt的思考：</p></blockquote><p><strong>现有项目架构：</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pc项目-&gt;pc服务器-&gt;api服务器</span><br><span class="line">app项目-&gt;api服务器</span><br></pre></td></tr></table></figure></p><h2 id="jwt是否需要服务器存储用户状态"><a href="#jwt是否需要服务器存储用户状态" class="headerlink" title="jwt是否需要服务器存储用户状态"></a>jwt是否需要服务器存储用户状态</h2><p>按照jwt的思路，服务端是不需要存储用户状态的，只要有秘钥+过期时间就可以实现用户的认证和过期，至于读库vs加解密验证哪个过程对服务器的压力更大，这个可能需要对比测试，但从原理和常识来讲，存库读库的成本应该更高一点。无库产生的加解密开销相对于读写库应该是非常小的，而且无库可以轻松做到跨服务器的认证。</p><h2 id="jwt方案中token的安全问题"><a href="#jwt方案中token的安全问题" class="headerlink" title="jwt方案中token的安全问题"></a>jwt方案中token的安全问题</h2><p>两个安全问题：</p><a id="more"></a><ul><li><p>token泄露，泄露一般存在两个地方，1是传输层，2是客户端。先考虑传输层：http被窃听，或者https被破解（https的安全性这里不做讨论），那么如果token在传输层被拦截，传统的cookie存储的sessionId也有一样的问题。再说客户端，一样的情况，如果cookie可以被窃取，token也没办法解决这个问题。已经做过的测试是：拦截到cookie后，把cookie放在另一台电脑上也是可以使用的，这个跟token是一样的。</p></li><li><p>还有一种情况是重放攻击，http请求被拦截重放，这个安全性对于cookie和jwt是一样的，避免这个问题需要配合其他手段，但基本很难避免。</p></li></ul><p><strong>综上，jwt碰到的安全问题跟传统方式一样。</strong></p><h2 id="jwt如何解决续签问题"><a href="#jwt如何解决续签问题" class="headerlink" title="jwt如何解决续签问题"></a>jwt如何解决续签问题</h2><p>传统的cookie的续签方案一般都是框架自带的，session有效期30分钟，30分钟内如果有访问，session有效期被延长30分钟。那么jwt是怎么实现的呢，细节没看完，不过基本的逻辑是频繁重签名（不知道为什么有人这么干，开销应该不小，而且问题挺多），或者是有效期30分钟，服务器发现token要过期了，提前三分钟重签并返回新的token，客户端每次请求都检测新旧token，如果不一致更新本地token（这个可以放在http的请求预处理里，复杂度和开销都不大）。关于新token的发放导致旧token有效期内的访问失效的问题参见这里的<a href="https://segmentfault.com/q/1010000002449556" target="_blank" rel="noopener">token新旧更替问题讨论</a> 。这种方案就可以实现浏览器里传统cookie的续签需求，以及app7天内登陆就可以持续刷新登陆状态的问题（app比较特殊，每天第一次访问时刷新一下token）。</p><h2 id="jwt如何解决注销问题"><a href="#jwt如何解决注销问题" class="headerlink" title="jwt如何解决注销问题"></a>jwt如何解决注销问题</h2><p>好了，jwt最大的问题来了，怎么注销？先看传统的session是怎么注销的：用户点击退出，调用后台退出接口，也就是session注销接口，依托于后台的状态更新。那么服务端做的呢，如果是用文件或者数据库存储的，那么通过删记录是可以后台强制踢出的，放在内存里就不要想了（如果用户量大了放内存的话服务器也吃不消，放文件里io太频繁基本也不靠谱，还好有了Redis）。jwt最大的问题就在于后台没有存储用户状态，用户退出的话只是客户端删掉了token，然而此token在有效期内还是有效的，也就是说如果token泄露的话就麻烦了，不过token泄露的问题已经在上面讲过了，和cookie是同一个问题。那么最麻烦的就是怎么让一个token在用户注销后失效，以及后台强制退出，这个jwt是没办法的，因为jwt的无状态和用户状态维护是个矛盾冲突的话题。如果要解决就要建立一个黑名单，也就是把用户注销后的token放到redis里，然后每次校验黑名单（这里还是用到了数据库），</p><h2 id="使用jwt-Redis黑名单的方案"><a href="#使用jwt-Redis黑名单的方案" class="headerlink" title="使用jwt+Redis黑名单的方案"></a>使用jwt+Redis黑名单的方案</h2><p>接上个问题，jwt推崇的无状态和跨服务器认证在数据库的出现后，貌似没有任何优势，真的没有优势吗？也不全是，至少有两个小优势，第一，存储黑名单（也就是注销后的用户或者黑户）比起存储登录之后的用户这个量级都是相当小的，存储量下降&amp;读取速度提高。第二个优势是app和pc能共用同一套认证机制，也就意味着前后端彻底的分离，不必再为cookie和session认证单独搭一个服务器。</p><h2 id="用了jwt之后html服务怎么提供呢"><a href="#用了jwt之后html服务怎么提供呢" class="headerlink" title="用了jwt之后html服务怎么提供呢"></a>用了jwt之后html服务怎么提供呢</h2><p>对于前后端分离的项目来说，pc服务器的两个任务1是做认证（jwt已经解决），2是提供html服务。html服务可以交给nginx或者放到cdn，无论哪个方案都比tomcat之类的静态资源处理能力更强大，也就是说html和js等静态资源全部交给静态资源服务器来处理。那么安全问题又来了，怎么对文件做权限控制呢？对于一个前后端分离的项目来说，html一般不会嵌套后端的代码，所以html没有所谓的安全问题，换句话说html里根本没有任何有价值的内容。对于js来说，里面包含了业务逻辑，实际上对js做限制也是没有任何意义的，因为前端的代码是暴露给客户端的，即便控制，黑客登录之后也是能看到你的代码的，惟一能做的就是压缩混淆，把压缩后的代码放到线上，源码不放到线上，最大程度增加通过阅读js读取业务逻辑的难度（实际意义也不大，尤其对于有些公司压根连压缩这一步都不做的，更没有这个问题的顾虑了）。那么也就是说前后端分离的项目里html（没有后端代码嵌入）和js是没有安全的考虑必要的，真正要考虑的大概也就是图片的防盗链和pdf等静态资源的处理吧，这个因为对于后端不是很熟悉所以不做深入讨论，对于pdf等资源能想到的也就是通过需要授权的接口去拿pdf的路径吧。</p><h2 id="到底要不要数据库"><a href="#到底要不要数据库" class="headerlink" title="到底要不要数据库"></a>到底要不要数据库</h2><p>如果不考虑用户注销后一定要token失效和强制退出需求的话，是不需要数据库的，即便加上redis对于传统方案来说也是有上文提到的两个优势。而且其实注销后一定要token失效主要也是考虑token泄露的问题（见上文），所以如果有踢出用户登录需求的话，还是要有数据库做黑名单存储的，一旦用户被拉入黑名单，就要立马停掉用户的签名发放，所以这个问题并不单单是认证的问题，还有签名发放的问题。</p><h2 id="用户认证的终极解决方案（跨服务器）"><a href="#用户认证的终极解决方案（跨服务器）" class="headerlink" title="用户认证的终极解决方案（跨服务器）"></a>用户认证的终极解决方案（跨服务器）</h2><p>前提就是跨服务，实际上jwt本身已经实现了跨服务（无状态），既然服务端不存储用户状态，只要多个服务器之间使用共同的秘钥和加密方案就可以实现x.abc.com里登录之后在y.abc.com那台服务器做登录认证。但是问题上面也说了，如果不考虑注销和强制退出的情况的话，这个话题也就到处为止了。但是如果完美主义呢？当然还是要实现这两个功能，也就是要有黑名单服务器，或者说认证服务器auth.abc.com，无论x.abc.com还是y.abc.com里登录或者注销都要先通过auth.abc.com，但是带来的读写不一致和额外的认证开销问题大概也是一个历史性难题吧。或许也可以参考Oauth2.0的方案，做隐式认证。不存储用户的状态的话，jwt跨服务器应该是个比较简单的解决方案吧，但如果一个公司有跨服务器需求的话，那么规模之大，里面的后端童鞋应该有更为专业的方案吧，欢迎分享。此段不专业莫要踩我。</p><hr><h2 id="结论："><a href="#结论：" class="headerlink" title="结论："></a>结论：</h2><p>上文阐述了作为一个卑微的前端能想到的jwt的问题和思考，总结来说，使用jwt可以实现真正的前后端分离，浏览器可以和app用一样的认证机制，无论对服务器的搭建还是服务器开销都是不错的优化，至于黑名单的设置，这个看需求吧。</p><hr><p><strong>彩蛋</strong></p><blockquote><p>为什么会有彩蛋呢，因为结论里不能说太多废话，就搁这里说了，jwt主要解决了浏览器和app共用一个服务器的问题，也就是少了一个pc服务器。<br><br>有看客就要问了，那你怎么看node呢，ssr？pwa？字节码？<br><br>这个当然要且看下回分解了️️</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;关于jwt的思考&lt;br&gt;jwt是个做用户权限认证的方案，科普的内容参考相关文档吧，这里提出几个关于jwt的思考：&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;现有项目架构：&lt;/strong&gt;&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;pc项目-&amp;gt;pc服务器-&amp;gt;api服务器&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;app项目-&amp;gt;api服务器&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&quot;jwt是否需要服务器存储用户状态&quot;&gt;&lt;a href=&quot;#jwt是否需要服务器存储用户状态&quot; class=&quot;headerlink&quot; title=&quot;jwt是否需要服务器存储用户状态&quot;&gt;&lt;/a&gt;jwt是否需要服务器存储用户状态&lt;/h2&gt;&lt;p&gt;按照jwt的思路，服务端是不需要存储用户状态的，只要有秘钥+过期时间就可以实现用户的认证和过期，至于读库vs加解密验证哪个过程对服务器的压力更大，这个可能需要对比测试，但从原理和常识来讲，存库读库的成本应该更高一点。无库产生的加解密开销相对于读写库应该是非常小的，而且无库可以轻松做到跨服务器的认证。&lt;/p&gt;
&lt;h2 id=&quot;jwt方案中token的安全问题&quot;&gt;&lt;a href=&quot;#jwt方案中token的安全问题&quot; class=&quot;headerlink&quot; title=&quot;jwt方案中token的安全问题&quot;&gt;&lt;/a&gt;jwt方案中token的安全问题&lt;/h2&gt;&lt;p&gt;两个安全问题：&lt;/p&gt;
    
    </summary>
    
      <category term="后端" scheme="https://gengxuelei.github.io/categories/%E5%90%8E%E7%AB%AF/"/>
    
    
      <category term="jwt" scheme="https://gengxuelei.github.io/tags/jwt/"/>
    
  </entry>
  
  <entry>
    <title>Linux安装配置vsftpd</title>
    <link href="https://gengxuelei.github.io/2017/12/27/Linux%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AEvsftpd/"/>
    <id>https://gengxuelei.github.io/2017/12/27/Linux安装配置vsftpd/</id>
    <published>2017-12-27T06:09:36.000Z</published>
    <updated>2019-03-20T06:43:51.536Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-安装："><a href="#1-安装：" class="headerlink" title="1. 安装："></a>1. 安装：</h2><ul><li>ubuntu</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install vsftpd</span><br></pre></td></tr></table></figure><ul><li>centos</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 检查是否安装vsftpd</span></span><br><span class="line"><span class="comment"># 如果出现vsftpd-2.0.5-21.el5，说明已经安装 vsftp</span></span><br><span class="line">rpm -qa | grep vsftpd</span><br><span class="line"><span class="comment"># 或者用yum检查：</span></span><br><span class="line">yum list vsftpd</span><br><span class="line"><span class="comment"># 安装命令：</span></span><br><span class="line">yum -y install vsftpd</span><br></pre></td></tr></table></figure><a id="more"></a><h2 id="2-建立vsftpd路径赋予权限，添加uftp用户并设置密码"><a href="#2-建立vsftpd路径赋予权限，添加uftp用户并设置密码" class="headerlink" title="2. 建立vsftpd路径赋予权限，添加uftp用户并设置密码"></a>2. 建立vsftpd路径赋予权限，添加uftp用户并设置密码</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#新建文件夹uftp</span></span><br><span class="line">sudo mkdir /home/uftp                           </span><br><span class="line"><span class="comment">#添加用户uftp</span></span><br><span class="line">sudo useradd -d /home/uftp -s /bin/bash uftp  </span><br><span class="line"><span class="comment">#设置uftp的用户密码</span></span><br><span class="line">sudo passwd uftp                </span><br><span class="line"><span class="comment">#更改文件夹所属用户</span></span><br><span class="line">sudo chown -R uftp /home/uftp          </span><br><span class="line"><span class="comment">#更改文件夹所属用户组</span></span><br><span class="line">sudo chgrp -R uftp /home/uftp          </span><br><span class="line"><span class="comment">#更改文件夹权限</span></span><br><span class="line">sudo chmod 775 /home/uftp</span><br></pre></td></tr></table></figure><h2 id="3-下载FileZilla或者WinSCP一路下一步安装"><a href="#3-下载FileZilla或者WinSCP一路下一步安装" class="headerlink" title="3. 下载FileZilla或者WinSCP一路下一步安装"></a>3. 下载<code>FileZilla</code>或者<code>WinSCP</code>一路下一步安装</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">填入服务器地址，协议为sftp，端口选22，用户名密码为uftp</span><br></pre></td></tr></table></figure><hr><blockquote><p>更多配置及安装信息见：<br><a href="http://os.51cto.com/art/201008/222036.htm" target="_blank" rel="noopener">玩转vsftpd服务器的四大高级配置</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;1-安装：&quot;&gt;&lt;a href=&quot;#1-安装：&quot; class=&quot;headerlink&quot; title=&quot;1. 安装：&quot;&gt;&lt;/a&gt;1. 安装：&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;ubuntu&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sudo apt-get install vsftpd&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;centos&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 检查是否安装vsftpd&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 如果出现vsftpd-2.0.5-21.el5，说明已经安装 vsftp&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;rpm -qa | grep vsftpd&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 或者用yum检查：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;yum list vsftpd&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 安装命令：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;yum -y install vsftpd&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="后端" scheme="https://gengxuelei.github.io/categories/%E5%90%8E%E7%AB%AF/"/>
    
    
      <category term="ftp" scheme="https://gengxuelei.github.io/tags/ftp/"/>
    
      <category term="centos" scheme="https://gengxuelei.github.io/tags/centos/"/>
    
  </entry>
  
  <entry>
    <title>js函数声明与函数表达式</title>
    <link href="https://gengxuelei.github.io/2017/12/27/js%E5%87%BD%E6%95%B0%E5%A3%B0%E6%98%8E%E4%B8%8E%E5%87%BD%E6%95%B0%E8%A1%A8%E8%BE%BE%E5%BC%8F/"/>
    <id>https://gengxuelei.github.io/2017/12/27/js函数声明与函数表达式/</id>
    <published>2017-12-27T06:01:37.000Z</published>
    <updated>2019-03-20T06:43:51.536Z</updated>
    
    <content type="html"><![CDATA[<h2 id="js中函数声明-amp-函数表达式"><a href="#js中函数声明-amp-函数表达式" class="headerlink" title="js中函数声明 &amp; 函数表达式"></a>js中函数声明 &amp; 函数表达式</h2><ul><li>函数声明：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">function 函数名称 (参数：可选)&#123; 函数体 &#125;</span><br></pre></td></tr></table></figure><ul><li>函数表达式：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">function 函数名称（可选）(参数：可选)&#123; 函数体 &#125;</span><br></pre></td></tr></table></figure><h2 id="如何辨别"><a href="#如何辨别" class="headerlink" title="如何辨别"></a>如何辨别</h2><p><em>不包含函数名为函数表达式，如果包含，参见下文</em></p><a id="more"></a><ul><li>函数声明：</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">foo</span>(<span class="params"></span>)</span>&#123;&#125; <span class="comment">// 声明，因为它是程序的一部分</span></span><br><span class="line"></span><br><span class="line">(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">bar</span>(<span class="params"></span>)</span>&#123;&#125; <span class="comment">// 声明，因为它是函数体的一部分</span></span><br><span class="line">&#125;)();</span><br></pre></td></tr></table></figure><ul><li>函数表达式</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> bar = <span class="function"><span class="keyword">function</span> <span class="title">foo</span>(<span class="params"></span>)</span>&#123;&#125;; <span class="comment">// 表达式，赋值表达式的一部分</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">new</span> <span class="function"><span class="keyword">function</span> <span class="title">bar</span>(<span class="params"></span>)</span>&#123;&#125;; <span class="comment">// 表达式，new表达式</span></span><br><span class="line"></span><br><span class="line">(<span class="function"><span class="keyword">function</span> <span class="title">foo</span>(<span class="params"></span>)</span>&#123;&#125;); <span class="comment">// 函数表达式：包含在**分组操作符**内</span></span><br></pre></td></tr></table></figure><h2 id="有何作用"><a href="#有何作用" class="headerlink" title="有何作用"></a>有何作用</h2><p><em>函数声明会在任何表达式被解析和求值之前先被解析和求值，即使你的声明在代码的最后一行，它也会在同作用域内第一个表达式之前被解析/求值</em><br><strong>eg：</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">alert(fn()); //正常弹出，因为执行前已定义fn</span><br><span class="line">function fn() &#123;</span><br><span class="line">return &apos;Hello world!&apos;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>特例：<br>if语句也可以声明函数，但各浏览器结果不同</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (<span class="literal">true</span>) &#123;</span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">foo</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">'first'</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">foo</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">'second'</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">foo();<span class="comment">//经测试Chrome无论条件真假都会返回second；</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 相反，这样情况，我们要用函数表达式</span></span><br><span class="line"><span class="keyword">var</span> foo;</span><br><span class="line"><span class="keyword">if</span> (<span class="literal">true</span>) &#123;</span><br><span class="line">  foo = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">'first'</span>;</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">  foo = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">'second'</span>;</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;</span><br><span class="line">foo();</span><br></pre></td></tr></table></figure><h2 id="关于分组操作符："><a href="#关于分组操作符：" class="headerlink" title="关于分组操作符："></a>关于分组操作符：</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">(<span class="keyword">var</span> x = <span class="number">5</span>); <span class="comment">// 分组操作符，只能包含表达式而不能包含语句：这里的var就是语句，去掉小括号正常；</span></span><br><span class="line">&#125; <span class="keyword">catch</span>(err) &#123;</span><br><span class="line"><span class="comment">// SyntaxError</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;js中函数声明-amp-函数表达式&quot;&gt;&lt;a href=&quot;#js中函数声明-amp-函数表达式&quot; class=&quot;headerlink&quot; title=&quot;js中函数声明 &amp;amp; 函数表达式&quot;&gt;&lt;/a&gt;js中函数声明 &amp;amp; 函数表达式&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;函数声明：&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;function 函数名称 (参数：可选)&amp;#123; 函数体 &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;函数表达式：&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;function 函数名称（可选）(参数：可选)&amp;#123; 函数体 &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;如何辨别&quot;&gt;&lt;a href=&quot;#如何辨别&quot; class=&quot;headerlink&quot; title=&quot;如何辨别&quot;&gt;&lt;/a&gt;如何辨别&lt;/h2&gt;&lt;p&gt;&lt;em&gt;不包含函数名为函数表达式，如果包含，参见下文&lt;/em&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="前端" scheme="https://gengxuelei.github.io/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="js" scheme="https://gengxuelei.github.io/tags/js/"/>
    
  </entry>
  
  <entry>
    <title>JavaScript运算符优先级，逻辑表达式，等于全等于，序列检测小结</title>
    <link href="https://gengxuelei.github.io/2017/12/27/JavaScript%E8%BF%90%E7%AE%97%E7%AC%A6%E4%BC%98%E5%85%88%E7%BA%A7%EF%BC%8C%E9%80%BB%E8%BE%91%E8%A1%A8%E8%BE%BE%E5%BC%8F%EF%BC%8C%E7%AD%89%E4%BA%8E%E5%85%A8%E7%AD%89%E4%BA%8E%EF%BC%8C%E5%BA%8F%E5%88%97%E6%A3%80%E6%B5%8B%E5%B0%8F%E7%BB%93/"/>
    <id>https://gengxuelei.github.io/2017/12/27/JavaScript运算符优先级，逻辑表达式，等于全等于，序列检测小结/</id>
    <published>2017-12-27T03:42:42.000Z</published>
    <updated>2019-03-20T06:43:51.535Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-JavaScript运算符优先级"><a href="#1-JavaScript运算符优先级" class="headerlink" title="1. JavaScript运算符优先级"></a>1. JavaScript运算符优先级</h2><table><thead><tr><th>序号</th><th>运算符</th><th>描述</th></tr></thead><tbody><tr><td>01</td><td>. [] ()</td><td>对象成员存取、数组下标、函数调用等</td></tr><tr><td>02</td><td>++ – ~ ！ delete new typeof void</td><td>一元运算符等</td></tr><tr><td>03</td><td>* / %</td><td>乘法、除法、取模</td></tr><tr><td>04</td><td>+ - +</td><td>加法、减法、字符串连接</td></tr><tr><td>05</td><td>&lt;&lt; &gt;&gt; &gt;&gt;&gt;</td><td>移位</td></tr><tr><td>06</td><td>&lt; &lt;= &gt; &gt;= instanceof</td><td>序列检测，instanceof</td></tr><tr><td>07</td><td>== != === !==</td><td>等值检测</td></tr><tr><td>08</td><td>&amp;</td><td>按位与</td></tr><tr><td>09</td><td>^</td><td>按位异或</td></tr><tr><td>10</td><td>&#124;</td><td>按位或</td></tr><tr><td>11</td><td>&amp;&amp;</td><td>逻辑与</td></tr><tr><td>12</td><td>&#124;&#124;</td><td>逻辑或</td></tr><tr><td>13</td><td>?:</td><td>条件（右结合性）</td></tr><tr><td>14</td><td>= op=</td><td>赋值、运算赋值</td></tr><tr><td>15</td><td>,</td><td>多重求值</td></tr></tbody></table><a id="more"></a><h2 id="2-js逻辑表达式"><a href="#2-js逻辑表达式" class="headerlink" title="2. js逻辑表达式"></a>2. js逻辑表达式</h2><p><em>四条规则：</em></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">规则1 ：支持布尔短路</span><br><span class="line">规则2： 将运算元理解为布尔值，以进行布尔运算</span><br><span class="line">规则3： 不改变运算元的数据类型</span><br><span class="line">规则4： 不强制运算结果的数据类型</span><br></pre></td></tr></table></figure><p>两条特性：（看第一个参数）<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1：a1 &amp;&amp; a2 --&gt;a1？a2：a1；</span><br><span class="line">2：a1 || a2 --&gt;a1？a1：a2；</span><br></pre></td></tr></table></figure></p><h2 id="3-js等于与全等于"><a href="#3-js等于与全等于" class="headerlink" title="3. js等于与全等于"></a>3. js等于与全等于</h2><p>1.等值检测中“相等”的运算规则（==）</p><table><thead><tr><th>类型</th><th>运算规则</th></tr></thead><tbody><tr><td>两个值类型比较</td><td>转换成相同数据类型的值进行“数据等值”的比较</td></tr><tr><td>值类型与引用类型比较</td><td>将引用类型数据转换为与值类型数据相同类型的数据，再进行“数据等值”比较</td></tr><tr><td>两个引用类型比较</td><td>比较引用（的地址）</td></tr></tbody></table><p>2.等值检测中“相同”的运算规则（===）</p><table><thead><tr><th>类型</th><th>运算规则</th></tr></thead><tbody><tr><td>两个值类型比较</td><td>数据类型不同，则必然“不相同”<br>数据类型相同，进行“等值比较”</td></tr><tr><td>值类型与引用类型比较</td><td>必然“不相同”</td></tr><tr><td>两个引用类型比较</td><td>比较引用（的地址）</td></tr></tbody></table><p><strong>备注</strong><br>在三种类型（数值，布尔值和字符串）中，数值和布尔值的“数据等值”检测开销比较小，但对字符串检测时就存在较大的开销。因为必须对字符串中的每一个字符进行比较，才能判断两个字符串是否相等。</p><h2 id="4-序列检测"><a href="#4-序列检测" class="headerlink" title="4. 序列检测"></a>4. 序列检测</h2><p>可进行序列检测的数据类型：</p><table><thead><tr><th>可比较序列的类型</th><th>序列值</th></tr></thead><tbody><tr><td>boolean</td><td>0-1</td></tr><tr><td>string</td><td>(*注1)</td></tr><tr><td>number</td><td>NEGATIVE_INFINITY ~ POSITIVE_INFINIGY(*注2)</td></tr></tbody></table><p><em>注1：在js中，不存在char（字符）这种数据类型，但字符串的每一个字符，都被作为单一字符（#0~#255）参与序列检测</em><br><em>注2：负无穷~正无穷，NaN不参与序列检测</em><br><strong>tip</strong>：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">!<span class="built_in">isFinite</span>()===<span class="built_in">isNaN</span>()  <span class="comment">//true</span></span><br><span class="line"><span class="built_in">isFinite</span>(<span class="literal">undefined</span>)===<span class="built_in">isNaN</span>(<span class="literal">null</span>)  <span class="comment">//false</span></span><br><span class="line"><span class="built_in">isFinite</span>(<span class="literal">null</span>)===<span class="built_in">isNaN</span>(<span class="literal">undefined</span>)  <span class="comment">//true</span></span><br></pre></td></tr></table></figure><p>undefined – NaN<br>null !– NaN</p><h2 id="5-序列检测规则"><a href="#5-序列检测规则" class="headerlink" title="5. 序列检测规则"></a>5. 序列检测规则</h2><table><thead><tr><th>类型</th><th>运算规则</th></tr></thead><tbody><tr><td>两个值类型进行比较</td><td>直接比较数据再序列中的大小</td></tr><tr><td>值类型与引用类型比较</td><td>将引用类型的数值转换为与值类型数据相同类型的数据，再进行”序列大小”的比较</td></tr><tr><td>两个引用类型比较</td><td>无意义总是返回false（*注3）</td></tr></tbody></table><p><em>注3：对引用类型进行序列检测也是有可能的，取决于valueof()运算效果</em></p><ul><li>示例1：布尔值转换为0/1，只相等不相同</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="literal">true</span>==<span class="number">1</span>  <span class="comment">//true</span></span><br><span class="line"><span class="literal">true</span>===<span class="number">1</span>  <span class="comment">//false`</span></span><br></pre></td></tr></table></figure><ul><li>示例2：空字符串转换为0值</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">''</span>==<span class="number">0</span>    <span class="comment">//true</span></span><br><span class="line"><span class="string">' '</span>==<span class="number">0</span>   <span class="comment">//true</span></span><br><span class="line"><span class="string">''</span>===<span class="number">0</span>  <span class="comment">//false</span></span><br></pre></td></tr></table></figure><ul><li>示例3：两个对象（引用类型比较总是返回false）</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> o1 = o2 = &#123;&#125;;</span><br><span class="line"><span class="keyword">var</span> o3 = &#123;&#125;;</span><br><span class="line">o1 === o2   <span class="comment">//true</span></span><br><span class="line">o1 == o3      <span class="comment">//false</span></span><br></pre></td></tr></table></figure><ul><li><p>示例4：两个运算元都为字符串，将比较每个字符的序列值</p></li><li><p>示例5：当字符串与其他类型值比较时，将字符串转换为数值比较</p></li></ul><hr><blockquote><p>参考书籍：<br>《JavaScript语言精髓与编程实践》第二版 周爱民2012.3</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;1-JavaScript运算符优先级&quot;&gt;&lt;a href=&quot;#1-JavaScript运算符优先级&quot; class=&quot;headerlink&quot; title=&quot;1. JavaScript运算符优先级&quot;&gt;&lt;/a&gt;1. JavaScript运算符优先级&lt;/h2&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;序号&lt;/th&gt;
&lt;th&gt;运算符&lt;/th&gt;
&lt;th&gt;描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;01&lt;/td&gt;
&lt;td&gt;. [] ()&lt;/td&gt;
&lt;td&gt;对象成员存取、数组下标、函数调用等&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;02&lt;/td&gt;
&lt;td&gt;++ – ~ ！ delete new typeof void&lt;/td&gt;
&lt;td&gt;一元运算符等&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;03&lt;/td&gt;
&lt;td&gt;* / %&lt;/td&gt;
&lt;td&gt;乘法、除法、取模&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;04&lt;/td&gt;
&lt;td&gt;+ - +&lt;/td&gt;
&lt;td&gt;加法、减法、字符串连接&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;05&lt;/td&gt;
&lt;td&gt;&amp;lt;&amp;lt; &amp;gt;&amp;gt; &amp;gt;&amp;gt;&amp;gt;&lt;/td&gt;
&lt;td&gt;移位&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;06&lt;/td&gt;
&lt;td&gt;&amp;lt; &amp;lt;= &amp;gt; &amp;gt;= instanceof&lt;/td&gt;
&lt;td&gt;序列检测，instanceof&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;07&lt;/td&gt;
&lt;td&gt;== != === !==&lt;/td&gt;
&lt;td&gt;等值检测&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;08&lt;/td&gt;
&lt;td&gt;&amp;amp;&lt;/td&gt;
&lt;td&gt;按位与&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;09&lt;/td&gt;
&lt;td&gt;^&lt;/td&gt;
&lt;td&gt;按位异或&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;10&lt;/td&gt;
&lt;td&gt;&amp;#124;&lt;/td&gt;
&lt;td&gt;按位或&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;11&lt;/td&gt;
&lt;td&gt;&amp;amp;&amp;amp;&lt;/td&gt;
&lt;td&gt;逻辑与&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;12&lt;/td&gt;
&lt;td&gt;&amp;#124;&amp;#124;&lt;/td&gt;
&lt;td&gt;逻辑或&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;13&lt;/td&gt;
&lt;td&gt;?:&lt;/td&gt;
&lt;td&gt;条件（右结合性）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;14&lt;/td&gt;
&lt;td&gt;= op=&lt;/td&gt;
&lt;td&gt;赋值、运算赋值&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;15&lt;/td&gt;
&lt;td&gt;,&lt;/td&gt;
&lt;td&gt;多重求值&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
    
    </summary>
    
      <category term="前端" scheme="https://gengxuelei.github.io/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="js" scheme="https://gengxuelei.github.io/tags/js/"/>
    
  </entry>
  
  <entry>
    <title>[转载]20个常用正则表达式</title>
    <link href="https://gengxuelei.github.io/2017/12/27/%E8%BD%AC%E8%BD%BD-20%E4%B8%AA%E5%B8%B8%E7%94%A8%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/"/>
    <id>https://gengxuelei.github.io/2017/12/27/转载-20个常用正则表达式/</id>
    <published>2017-12-27T03:37:59.000Z</published>
    <updated>2019-03-20T06:43:51.537Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>转载：<br>知道这20个正则表达式，能让你少写1,000行代码：<br><a href="http://www.jianshu.com/p/e7bb97218946" target="_blank" rel="noopener">http://www.jianshu.com/p/e7bb97218946</a></p></blockquote><h2 id="1-校验密码强度"><a href="#1-校验密码强度" class="headerlink" title="1.校验密码强度"></a>1.校验密码强度</h2><p>密码的强度必须是包含大小写字母和数字的组合，不能使用特殊字符，长度在8-10之间。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).&#123;8,10&#125;$</span><br></pre></td></tr></table></figure></p><h2 id="2-校验中文"><a href="#2-校验中文" class="headerlink" title="2. 校验中文"></a>2. 校验中文</h2><p>字符串仅能是中文。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">^[\\u4e00-\\u9fa5]&#123;0,&#125;$</span><br></pre></td></tr></table></figure></p><a id="more"></a><h2 id="3-由数字、26个英文字母或下划线组成的字符串"><a href="#3-由数字、26个英文字母或下划线组成的字符串" class="headerlink" title="3. 由数字、26个英文字母或下划线组成的字符串"></a>3. 由数字、26个英文字母或下划线组成的字符串</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">^\\w+$</span><br></pre></td></tr></table></figure><h2 id="4-校验E-Mail-地址"><a href="#4-校验E-Mail-地址" class="headerlink" title="4. 校验E-Mail 地址"></a>4. 校验E-Mail 地址</h2><p>同密码一样，下面是E-mail地址合规性的正则检查语句<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[\\w!#$%&amp;&apos;*+/=?^_`&#123;|&#125;~-]+(?:\\.[\\w!#$%&amp;&apos;*+/=?^_`&#123;|&#125;~-]+)*@(?:[\\w](?:[\\w-]*[\\w])?\\.)+[\\w](?:[\\w-]*[\\w])?</span><br></pre></td></tr></table></figure></p><h2 id="5-校验身份证号码"><a href="#5-校验身份证号码" class="headerlink" title="5. 校验身份证号码"></a>5. 校验身份证号码</h2><p>15位：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">^[1-9]\\d&#123;7&#125;((0\\d)|(1[0-2]))(([0|1|2]\\d)|3[0-1])\\d&#123;3&#125;$</span><br></pre></td></tr></table></figure></p><p>18位：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">^[1-9]\\d&#123;5&#125;[1-9]\\d&#123;3&#125;((0\\d)|(1[0-2]))(([0|1|2]\\d)|3[0-1])\\d&#123;3&#125;([0-9]|X)$</span><br></pre></td></tr></table></figure></p><h2 id="6-校验日期"><a href="#6-校验日期" class="headerlink" title="6. 校验日期"></a>6. 校验日期</h2><p>“yyyy-mm-dd“ 格式的日期校验，已考虑平闰年。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">^(?:(?!0000)[0-9]&#123;4&#125;-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1[0-9]|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[0-9]&#123;2&#125;(?:0[48]|[2468][048]|[13579][26])|(?:0[48]|[2468][048]|[13579][26])00)-02-29)$</span><br></pre></td></tr></table></figure></p><h2 id="7-校验金额"><a href="#7-校验金额" class="headerlink" title="7. 校验金额"></a>7. 校验金额</h2><p>金额校验，精确到2位小数。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">^[0-9]+(.[0-9]&#123;2&#125;)?$</span><br></pre></td></tr></table></figure></p><h2 id="8-校验手机号"><a href="#8-校验手机号" class="headerlink" title="8. 校验手机号"></a>8. 校验手机号</h2><p>下面是国内 13、15、18开头的手机号正则表达式。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">^(13[0-9]|14[5|7]|15[0|1|2|3|5|6|7|8|9]|18[0|1|2|3|5|6|7|8|9])\\d&#123;8&#125;$</span><br></pre></td></tr></table></figure></p><h2 id="9-判断IE的版本"><a href="#9-判断IE的版本" class="headerlink" title="9. 判断IE的版本"></a>9. 判断IE的版本</h2><p>IE目前还没被完全取代，很多页面还是需要做版本兼容，下面是IE版本检查的表达式。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">^.*MSIE [5-8](?:\\.[0-9]+)?(?!.*Trident\\/[5-9]\\.0).*$</span><br></pre></td></tr></table></figure></p><h2 id="10-校验IP-v4地址"><a href="#10-校验IP-v4地址" class="headerlink" title="10. 校验IP-v4地址"></a>10. 校验IP-v4地址</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">\\b(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.)&#123;3&#125;(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\b</span><br></pre></td></tr></table></figure><h2 id="11-校验IP-v6地址"><a href="#11-校验IP-v6地址" class="headerlink" title="11. 校验IP-v6地址"></a>11. 校验IP-v6地址</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(([0-9a-fA-F]&#123;1,4&#125;:)&#123;7,7&#125;[0-9a-fA-F]&#123;1,4&#125;|([0-9a-fA-F]&#123;1,4&#125;:)&#123;1,7&#125;:|([0-9a-fA-F]&#123;1,4&#125;:)&#123;1,6&#125;:[0-9a-fA-F]&#123;1,4&#125;|([0-9a-fA-F]&#123;1,4&#125;:)&#123;1,5&#125;(:[0-9a-fA-F]&#123;1,4&#125;)&#123;1,2&#125;|([0-9a-fA-F]&#123;1,4&#125;:)&#123;1,4&#125;(:[0-9a-fA-F]&#123;1,4&#125;)&#123;1,3&#125;|([0-9a-fA-F]&#123;1,4&#125;:)&#123;1,3&#125;(:[0-9a-fA-F]&#123;1,4&#125;)&#123;1,4&#125;|([0-9a-fA-F]&#123;1,4&#125;:)&#123;1,2&#125;(:[0-9a-fA-F]&#123;1,4&#125;)&#123;1,5&#125;|[0-9a-fA-F]&#123;1,4&#125;:((:[0-9a-fA-F]&#123;1,4&#125;)&#123;1,6&#125;)|:((:[0-9a-fA-F]&#123;1,4&#125;)&#123;1,7&#125;|:)|fe80:(:[0-9a-fA-F]&#123;0,4&#125;)&#123;0,4&#125;%[0-9a-zA-Z]&#123;1,&#125;|::(ffff(:0&#123;1,4&#125;)&#123;0,1&#125;:)&#123;0,1&#125;((25[0-5]|(2[0-4]|1&#123;0,1&#125;[0-9])&#123;0,1&#125;[0-9])\\.)&#123;3,3&#125;(25[0-5]|(2[0-4]|1&#123;0,1&#125;[0-9])&#123;0,1&#125;[0-9])|([0-9a-fA-F]&#123;1,4&#125;:)&#123;1,4&#125;:((25[0-5]|(2[0-4]|1&#123;0,1&#125;[0-9])&#123;0,1&#125;[0-9])\\.)&#123;3,3&#125;(25[0-5]|(2[0-4]|1&#123;0,1&#125;[0-9])&#123;0,1&#125;[0-9]))</span><br></pre></td></tr></table></figure><h2 id="12-检查URL的前缀"><a href="#12-检查URL的前缀" class="headerlink" title="12. 检查URL的前缀"></a>12. 检查URL的前缀</h2><p>应用开发中很多时候需要区分请求是HTTPS还是HTTP，通过下面的表达式可以取出一个url的前缀然后再逻辑判断。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">if (!s.match(/^[a-zA-Z]+:\\/\\//))</span><br><span class="line">&#123;</span><br><span class="line">    s = &apos;http://&apos; + s;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="13-提取URL链接"><a href="#13-提取URL链接" class="headerlink" title="13. 提取URL链接"></a>13. 提取URL链接</h2><p>下面的这个表达式可以筛选出一段文本中的URL。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">^(f|ht)&#123;1&#125;(tp|tps):\\/\\/([\\w-]+\\.)+[\\w-]+(\\/[\\w- ./?%&amp;=]*)?</span><br></pre></td></tr></table></figure></p><h2 id="14-文件路径及扩展名校验"><a href="#14-文件路径及扩展名校验" class="headerlink" title="14. 文件路径及扩展名校验"></a>14. 文件路径及扩展名校验</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">^([a-zA-Z]\\:|\\\\)\\\\([^\\\\]+\\\\)*[^\\/:*?&quot;&lt;&gt;|]+\\.txt(l)?$</span><br></pre></td></tr></table></figure><h2 id="15-提取Color-Hex-Codes"><a href="#15-提取Color-Hex-Codes" class="headerlink" title="15. 提取Color Hex Codes"></a>15. 提取Color Hex Codes</h2><p>有时需要抽取网页中的颜色代码，可以使用下面的表达式。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">\\#([a-fA-F]|[0-9])&#123;3,6&#125;</span><br></pre></td></tr></table></figure></p><h2 id="16-提取网页图片"><a href="#16-提取网页图片" class="headerlink" title="16. 提取网页图片"></a>16. 提取网页图片</h2><p>假若你想提取网页中所有图片信息，可以利用下面的表达式。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">\\&lt; *[img][^\\&gt;]*[src] *= *[\\&quot;\\&apos;]&#123;0,1&#125;([^\\&quot;\\&apos;\\ &gt;]*)</span><br></pre></td></tr></table></figure></p><h2 id="17-提取页面超链接"><a href="#17-提取页面超链接" class="headerlink" title="17. 提取页面超链接"></a>17. 提取页面超链接</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(&lt;a\\s*(?!.*\\brel=)[^&gt;]*)(href=&quot;https?://)((?!(?:(?:www\\.)?&apos;.implode(&apos;|(?:www\\.)?&apos;, $follow_list).&apos;))[^&quot;]+)&quot;((?!.*\\brel=)[^&gt;]*)(?:[^&gt;]*)&gt;</span><br></pre></td></tr></table></figure><h2 id="18-精炼CSS"><a href="#18-精炼CSS" class="headerlink" title="18. 精炼CSS"></a>18. 精炼CSS</h2><p>通过下面的表达式，可以搜索相同属性值的CSS，从而达到精炼代码的目的。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">^\\s*[a-zA-Z\\-]+\\s*[:]&#123;1&#125;\\s[a-zA-Z0-9\\s.#]+[;]&#123;1&#125;</span><br></pre></td></tr></table></figure></p><h2 id="19-抽取注释"><a href="#19-抽取注释" class="headerlink" title="19. 抽取注释"></a>19. 抽取注释</h2><p>如果你需要移除HMTL中的注释，可以使用如下的表达式。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--(.*?)--&gt;</span><br></pre></td></tr></table></figure></p><h2 id="20-匹配HTML标签"><a href="#20-匹配HTML标签" class="headerlink" title="20. 匹配HTML标签"></a>20. 匹配HTML标签</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;/?\\w+((\\s+\\w+(\\s*=\\s*(?:&quot;.*?&quot;|&apos;.*?&apos;|[\\^&apos;&quot;&gt;\\s]+))?)+\\s*|\\s*)/?&gt;</span><br></pre></td></tr></table></figure><h2 id="21-普通校验手机号"><a href="#21-普通校验手机号" class="headerlink" title="21. 普通校验手机号"></a>21. 普通校验手机号</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/^1\d&#123;10&#125;$/</span><br></pre></td></tr></table></figure><h2 id="22-交易密码正则（必须为6位数字）"><a href="#22-交易密码正则（必须为6位数字）" class="headerlink" title="22.交易密码正则（必须为6位数字）"></a>22.交易密码正则（必须为6位数字）</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/^\d&#123;6&#125;$/</span><br></pre></td></tr></table></figure><h2 id="23-密码正则（8到16位必须包含字母和数字）"><a href="#23-密码正则（8到16位必须包含字母和数字）" class="headerlink" title="23.密码正则（8到16位必须包含字母和数字）"></a>23.密码正则（8到16位必须包含字母和数字）</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/^(?![0-9]+$)(?![a-zA-Z]+$)[0-9A-Za-z]&#123;8,16&#125;$/</span><br></pre></td></tr></table></figure><h2 id="24-检查isWeixin"><a href="#24-检查isWeixin" class="headerlink" title="24. 检查isWeixin"></a>24. 检查isWeixin</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/MicroMessenger/gi.test(UA)</span><br></pre></td></tr></table></figure><h2 id="25-检查isAndroid"><a href="#25-检查isAndroid" class="headerlink" title="25.检查isAndroid"></a>25.检查isAndroid</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/android|adr/gi.test(UA)</span><br></pre></td></tr></table></figure><h2 id="26-检查isIos"><a href="#26-检查isIos" class="headerlink" title="26.检查isIos"></a>26.检查isIos</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/iphone|ipod|ipad/gi.test(UA) &amp;&amp; !isAndroid</span><br></pre></td></tr></table></figure><h2 id="27-检查isMobile"><a href="#27-检查isMobile" class="headerlink" title="27.检查isMobile"></a>27.检查isMobile</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">isAndroid || isIos</span><br></pre></td></tr></table></figure><p>参考资料：</p><p>知道这20个正则表达式，能让你少写1,000行代码：</p><blockquote><p><a href="http://www.jianshu.com/p/e7bb97218946" target="_blank" rel="noopener">http://www.jianshu.com/p/e7bb97218946</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;转载：&lt;br&gt;知道这20个正则表达式，能让你少写1,000行代码：&lt;br&gt;&lt;a href=&quot;http://www.jianshu.com/p/e7bb97218946&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;http://www.jianshu.com/p/e7bb97218946&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;1-校验密码强度&quot;&gt;&lt;a href=&quot;#1-校验密码强度&quot; class=&quot;headerlink&quot; title=&quot;1.校验密码强度&quot;&gt;&lt;/a&gt;1.校验密码强度&lt;/h2&gt;&lt;p&gt;密码的强度必须是包含大小写字母和数字的组合，不能使用特殊字符，长度在8-10之间。&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).&amp;#123;8,10&amp;#125;$&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&quot;2-校验中文&quot;&gt;&lt;a href=&quot;#2-校验中文&quot; class=&quot;headerlink&quot; title=&quot;2. 校验中文&quot;&gt;&lt;/a&gt;2. 校验中文&lt;/h2&gt;&lt;p&gt;字符串仅能是中文。&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;^[\\u4e00-\\u9fa5]&amp;#123;0,&amp;#125;$&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="工具" scheme="https://gengxuelei.github.io/categories/%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="转载" scheme="https://gengxuelei.github.io/tags/%E8%BD%AC%E8%BD%BD/"/>
    
      <category term="正则" scheme="https://gengxuelei.github.io/tags/%E6%AD%A3%E5%88%99/"/>
    
  </entry>
  
  <entry>
    <title>centos配置jdk、svn、maven、tomcat</title>
    <link href="https://gengxuelei.github.io/2017/12/27/centos%E9%85%8D%E7%BD%AEjdk%E3%80%81svn%E3%80%81maven%E3%80%81tomcat/"/>
    <id>https://gengxuelei.github.io/2017/12/27/centos配置jdk、svn、maven、tomcat/</id>
    <published>2017-12-27T03:30:18.000Z</published>
    <updated>2019-03-20T06:43:51.536Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-安装svn"><a href="#1-安装svn" class="headerlink" title="1. 安装svn"></a>1. 安装svn</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#添加svn源</span></span><br><span class="line">vi /etc/yum.repos.d/wandisco-svn.repo</span><br><span class="line"><span class="comment">#添加以下内容进去</span></span><br><span class="line">[WandiscoSVN]</span><br><span class="line">name=Wandisco SVN Repo</span><br><span class="line">baseurl=http://opensource.wandisco.com/centos/<span class="variable">$releasever</span>/svn-1.8/RPMS/<span class="variable">$basearch</span>/</span><br><span class="line">enabled=1</span><br><span class="line">gpgcheck=0</span><br><span class="line"><span class="comment">#删除之前版本</span></span><br><span class="line">yum remove subversion* -y &amp;&amp; yum clean all</span><br><span class="line"><span class="comment">#执行安装命令（使用proxychains4代理）</span></span><br><span class="line">proxychains4 yum install subversion -y</span><br><span class="line"><span class="comment">#检查版本</span></span><br><span class="line">svn --version</span><br></pre></td></tr></table></figure><p><strong>参考</strong><br><a href="http://tecadmin.net/install-subversion-1-8-on-centos-rhel/" target="_blank" rel="noopener">How to Install Subversion (SVN) 1.8.15 on CentOS/RHEL 7/6/5</a><br><a href="http://wdqfirst.blog.163.com/blog/static/11334741120124402559830/" target="_blank" rel="noopener">svn 冲突的产生与解决</a></p><a id="more"></a><h2 id="2-检出仓库"><a href="#2-检出仓库" class="headerlink" title="2. 检出仓库"></a>2. 检出仓库</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">svn co http://abc folder --username gxl</span><br></pre></td></tr></table></figure><p><strong>参考：</strong><br><a href="http://blog.sina.com.cn/s/blog_963453200101eiuq.html" target="_blank" rel="noopener">SVN命令使用详解</a></p><h2 id="3-安装jdk7"><a href="#3-安装jdk7" class="headerlink" title="3. 安装jdk7"></a>3. 安装jdk7</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">//1.建立java目录并进入</span><br><span class="line">sudo mkdir /usr/local/java &amp;&amp; cd /usr/local/java</span><br><span class="line"></span><br><span class="line">//2.wget获取jdk7.tar.gz （用proxychains4代理下载或者迅雷下载完用ftp上传）</span><br><span class="line">wget --no-check-certificate --no-cookies --header &quot;Cookie: oraclelicense=accept-securebackup-cookie&quot; http://download.oracle.com/otn-pub/java/jdk/7u79-b15/jdk-7u79-linux-x64.tar.gz</span><br><span class="line"></span><br><span class="line">//3.解压jdk</span><br><span class="line">sudo tar xvf jdk-7u79-linux-x64.tar.gz</span><br><span class="line"></span><br><span class="line">//4.设置环境变量</span><br><span class="line">sudo vi /etc/profile</span><br><span class="line"></span><br><span class="line">//5.在末尾添加：</span><br><span class="line">#JDK7 settings</span><br><span class="line">export JAVA_HOME=/usr/local/java/jdk1.7.0_79</span><br><span class="line">export JRE_HOME=$JAVA_HOME/jre</span><br><span class="line">export CLASSPATH=:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar:$JRE_HOME/lib</span><br><span class="line">export PATH=$PATH:$JAVA_HOME/bin:$JRE_HOME/bin</span><br><span class="line"></span><br><span class="line">//6.使profile生效</span><br><span class="line">sudo source /etc/profile</span><br><span class="line"></span><br><span class="line">//7.检查是否成功</span><br><span class="line">java -version</span><br></pre></td></tr></table></figure><p><strong>参考：</strong><br><a href="http://www.oracle.com/technetwork/java/javase/downloads/jdk7-downloads-1880260.html" target="_blank" rel="noopener">JDK7下载地址</a></p><p><a href="http://blog.csdn.net/lushuai09/article/details/47946311" target="_blank" rel="noopener">linux通过wget直接下载jdk，避免用户验证</a></p><p><a href="http://www.centoscn.com/image-text/install/2014/0827/3585.html" target="_blank" rel="noopener">CentOS下安装JDK1.7</a></p><p><a href="http://www.cnblogs.com/fsjohnhuang/p/3989418.html" target="_blank" rel="noopener">CentOS6.5菜鸟之旅：安装SUN JDK1.7和Tomcat7</a></p><h2 id="4-安装p7zip"><a href="#4-安装p7zip" class="headerlink" title="4.安装p7zip"></a>4.安装p7zip</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">//1.编译安装前，安装必要的套件包</span><br><span class="line">yum install kernel-devel kernel-headers gcc-c++ make -y</span><br><span class="line">//2.下载解压编译安装</span><br><span class="line">wget http://jaist.dl.sourceforge.net/project/p7zip/p7zip/16.02/p7zip_16.02_src_all.tar.bz2</span><br><span class="line">tar -jxvf p7zip_16.02_src_all.tar.bz2</span><br><span class="line">cd p7zip_16.02</span><br><span class="line">make &amp;&amp; make install</span><br><span class="line">//3.查看是否安装成功：</span><br><span class="line">7za</span><br></pre></td></tr></table></figure><p><strong>参考：</strong><br><a href="http://atlpsb.lofter.com/post/1d4cd801_7772f48" target="_blank" rel="noopener">如何在CentOS 7中安装7ZIP</a></p><h2 id="5-安装maven"><a href="#5-安装maven" class="headerlink" title="5.安装maven"></a>5.安装maven</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">cd /usr/local/src</span><br><span class="line">wget http://apache.fayea.com/maven/maven-3/3.3.9/binaries/apache-maven-3.3.9-bin.tar.gz</span><br><span class="line">tar xzvf apache-maven-3.3.9-bin.tar.gz</span><br><span class="line">mv apache-maven-3.3.9 ../maven3</span><br><span class="line">#配置环境变量</span><br><span class="line">vi /etc/profile</span><br><span class="line">#在末尾添加：</span><br><span class="line">#配置maven3</span><br><span class="line">export M2_HOME=/usr/local/maven3</span><br><span class="line">export PATH=$PATH:$M2_HOME/bin</span><br><span class="line">#使环境变量生效</span><br><span class="line">source /etc/profile</span><br><span class="line">#测试是否安装成功：</span><br><span class="line">mvn -v</span><br></pre></td></tr></table></figure><p><strong>参考：</strong><br><a href="http://maven.apache.org/download.cgi" target="_blank" rel="noopener">maven下载地址：</a><br><a href="http://www.darrenfang.com/2013/12/install-maven-on-centos/" target="_blank" rel="noopener">CentOS安装Maven</a></p><h2 id="6-配置tomcat7"><a href="#6-配置tomcat7" class="headerlink" title="6.配置tomcat7"></a>6.配置tomcat7</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">cd /usr/local/src</span><br><span class="line">wget http://www.us.apache.org/dist/tomcat/tomcat-7/v7.0.70/bin/apache-tomcat-7.0.70.tar.gz</span><br><span class="line">tar xzvf apache-tomcat-7.0.70.tar.gz</span><br><span class="line">mv apache-tomcat-7.0.70 ../tomcat7</span><br><span class="line">/usr/local/tomcat7/bin/startup.sh</span><br></pre></td></tr></table></figure><p><strong>参考</strong><br><a href="http://www.linuxidc.com/Linux/2014-07/104721.htm" target="_blank" rel="noopener">CentOS 6.4安装搭建Tomcat 7</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;1-安装svn&quot;&gt;&lt;a href=&quot;#1-安装svn&quot; class=&quot;headerlink&quot; title=&quot;1. 安装svn&quot;&gt;&lt;/a&gt;1. 安装svn&lt;/h2&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#添加svn源&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;vi /etc/yum.repos.d/wandisco-svn.repo&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#添加以下内容进去&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[WandiscoSVN]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;name=Wandisco SVN Repo&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;baseurl=http://opensource.wandisco.com/centos/&lt;span class=&quot;variable&quot;&gt;$releasever&lt;/span&gt;/svn-1.8/RPMS/&lt;span class=&quot;variable&quot;&gt;$basearch&lt;/span&gt;/&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;enabled=1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;gpgcheck=0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#删除之前版本&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;yum remove subversion* -y &amp;amp;&amp;amp; yum clean all&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#执行安装命令（使用proxychains4代理）&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;proxychains4 yum install subversion -y&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#检查版本&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;svn --version&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;参考&lt;/strong&gt;&lt;br&gt;&lt;a href=&quot;http://tecadmin.net/install-subversion-1-8-on-centos-rhel/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;How to Install Subversion (SVN) 1.8.15 on CentOS/RHEL 7/6/5&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://wdqfirst.blog.163.com/blog/static/11334741120124402559830/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;svn 冲突的产生与解决&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="后端" scheme="https://gengxuelei.github.io/categories/%E5%90%8E%E7%AB%AF/"/>
    
    
      <category term="centos" scheme="https://gengxuelei.github.io/tags/centos/"/>
    
  </entry>
  
  <entry>
    <title>truffle安装指南</title>
    <link href="https://gengxuelei.github.io/2017/12/26/truffle%E5%AE%89%E8%A3%85%E6%8C%87%E5%8D%97/"/>
    <id>https://gengxuelei.github.io/2017/12/26/truffle安装指南/</id>
    <published>2017-12-26T02:14:38.000Z</published>
    <updated>2019-03-20T06:43:51.537Z</updated>
    
    <content type="html"><![CDATA[<h2 id="安装步骤"><a href="#安装步骤" class="headerlink" title="安装步骤"></a>安装步骤</h2><p>首先安装最新版的node，然后执行以下命令更改npm镜像：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm i -g nrm --registry=https://registry.npm.taobao.org</span><br><span class="line">nrm use taobao</span><br></pre></td></tr></table></figure><p>然后执行以下命令安装ganache-cli（原testrpc）并启动：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm install -g ganache-cli</span><br><span class="line">ganache-cli</span><br></pre></td></tr></table></figure><p>然后新开一个窗口创建truffle项目：</p><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"># 全局安装truffle</span><br><span class="line">npm install -g truffle</span><br><span class="line"># 创建项目目录</span><br><span class="line">mkdir /home/eth/truffle-webpack/ -p</span><br><span class="line">cd /home/eth/truffle-webpack/</span><br><span class="line"># 初始化项目</span><br><span class="line">truffle unbox webpack</span><br><span class="line"># 编译项目</span><br><span class="line">truffle compile</span><br><span class="line"># 发布项目</span><br><span class="line">truffle migrate</span><br></pre></td></tr></table></figure><p>然后修改<code>package.json</code>文件：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&quot;dev&quot;: &quot;webpack-dev-server --host 0.0.0.0 --port 8080&quot;</span><br></pre></td></tr></table></figure></p><p>然后修改<code>truffle.js</code>文件：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">development: &#123;</span><br><span class="line">  host: &apos;yourIp&apos;,</span><br><span class="line">  port: 8545,</span><br><span class="line">  network_id: &apos;*&apos; // Match any network id</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>然后修改<code>app/javascripts/app.js</code>文件：<br>把：<br><del>window.web3 = new Web3(new Web3.providers.HttpProvider(“<a href="http://127.0.0.1:9545" target="_blank" rel="noopener">http://127.0.0.1:9545</a>“));</del><br>改成：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">window.web3 = new Web3(new Web3.providers.HttpProvider(&quot;http://yourIp:8545&quot;));</span><br></pre></td></tr></table></figure></p><p>然后执行下命令：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm run dev</span><br></pre></td></tr></table></figure></p><p>通过浏览器访问：ip:8080</p><h2 id="重启进程"><a href="#重启进程" class="headerlink" title="重启进程"></a>重启进程</h2><p><strong>通过以下命令查看8080和8545端口的占用：</strong><br><em>Linux:</em><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netstat -lnp | grep &lt;port&gt;</span><br></pre></td></tr></table></figure></p><p><em>Windows:</em><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netstat -ano | findstr &lt;port&gt;</span><br></pre></td></tr></table></figure></p><p><strong>查到pid之后执行以下命令：</strong><br><em>Linux:</em><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ps &lt;pid&gt;</span><br><span class="line">kill -9 &lt;pid&gt;</span><br></pre></td></tr></table></figure></p><p><em>Windows:</em><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">taskkill /F /PID &lt;pid&gt;</span><br></pre></td></tr></table></figure></p><p><strong>杀掉ganache-cli和truffle的进程之后执行：</strong></p><p>1.开启ganache-cli服务<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ganache-cli</span><br></pre></td></tr></table></figure></p><p>2.开启truffle服务：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd /home/eth/truffle-webpack/</span><br><span class="line">npm run dev</span><br></pre></td></tr></table></figure></p><p>3.通过浏览器访问：ip:8080</p><h2 id="碰到的问题："><a href="#碰到的问题：" class="headerlink" title="碰到的问题："></a>碰到的问题：</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">TypeError: fsevents is not a constructor</span><br></pre></td></tr></table></figure><p>所以需要使用<code>truffle init webpack</code> 来代替官方的<code>truffle init</code>命令</p><p>然后需要修改package.json文件以支持<code>ip：port</code>的访问（默认是<code>localhost：port</code>）</p><p>然后用<code>npm run dev</code>来代替官方<code>truffle serve</code>命令</p><p>至此，通过访问<a href="#">localhost:8080</a>即可（要保证ganache-cli在后台运行）</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;安装步骤&quot;&gt;&lt;a href=&quot;#安装步骤&quot; class=&quot;headerlink&quot; title=&quot;安装步骤&quot;&gt;&lt;/a&gt;安装步骤&lt;/h2&gt;&lt;p&gt;首先安装最新版的node，然后执行以下命令更改npm镜像：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;npm i -g nrm --registry=https://registry.npm.taobao.org&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;nrm use taobao&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;然后执行以下命令安装ganache-cli（原testrpc）并启动：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;npm install -g ganache-cli&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ganache-cli&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;然后新开一个窗口创建truffle项目：&lt;/p&gt;
    
    </summary>
    
      <category term="后端" scheme="https://gengxuelei.github.io/categories/%E5%90%8E%E7%AB%AF/"/>
    
    
      <category term="truffle" scheme="https://gengxuelei.github.io/tags/truffle/"/>
    
      <category term="区块链" scheme="https://gengxuelei.github.io/tags/%E5%8C%BA%E5%9D%97%E9%93%BE/"/>
    
  </entry>
  
  <entry>
    <title>docker的安装配置</title>
    <link href="https://gengxuelei.github.io/2017/12/22/docker%E7%9A%84%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/"/>
    <id>https://gengxuelei.github.io/2017/12/22/docker的安装配置/</id>
    <published>2017-12-22T02:01:25.000Z</published>
    <updated>2019-03-20T07:46:23.163Z</updated>
    
    <content type="html"><![CDATA[<h2 id="docker安装："><a href="#docker安装：" class="headerlink" title="docker安装："></a>docker安装：</h2><p><a href="https://dev.aliyun.com/search.html" target="_blank" rel="noopener">https://dev.aliyun.com/search.html</a></p><p>通过管理中心进去获取自己的<strong>国内镜像加速器</strong>（注册登录阿里云账号）：</p><img src="/imgs/docker的安装配置/1.png"><a id="more"></a><p><img src="/imgs/docker的安装配置/2.png" alt="avatar"></p><p>图中打叉的请直接忽略掉（大坑），直接把如下链接对应的docker客户端下载安装即可，安装会提示你升级到最新版，请忽略掉（大坑），让你重启就乖乖听话。</p><p>Windows系统的安装文件目录：<a href="http://mirrors.aliyun.com/docker-toolbox/windows/docker-for-windows/" target="_blank" rel="noopener">http://mirrors.aliyun.com/docker-toolbox/windows/docker-for-windows/</a></p><p>配置镜像方式如下：<br><img src="/imgs/docker的安装配置/3.png" alt="avatar"></p><p>第二行请参照上文获取到的加速器（配置docker-cn+阿里云加速两个加速器）</p><p>阿里云镜像搜索：</p><p><a href="https://dev.aliyun.com/search.html" target="_blank" rel="noopener">https://dev.aliyun.com/search.html</a></p><p>菜鸟教程：</p><p><a href="http://www.runoob.com/docker/docker-tutorial.html" target="_blank" rel="noopener">http://www.runoob.com/docker/docker-tutorial.html</a></p><h2 id="常用命令："><a href="#常用命令：" class="headerlink" title="常用命令："></a>常用命令：</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">docker version  //  查看版本</span><br><span class="line"></span><br><span class="line">docker info  //  查看配置信息</span><br><span class="line"></span><br><span class="line">docker images // 查看images</span><br><span class="line"></span><br><span class="line">docker ps  -a  // 查看container</span><br><span class="line"></span><br><span class="line">docker pull &lt;registry&gt;  // 从镜像仓库中拉取或者更新指定镜像</span><br><span class="line"></span><br><span class="line">docker run &lt;registry&gt;  // 创建一个新的容器并运行一个命令</span><br><span class="line"></span><br><span class="line">docker exec &lt;container&gt;  // 在运行的容器中执行命令</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">docker run/exec</span><br><span class="line"></span><br><span class="line">-i 交互式 -t 伪终端 -d 守护进程后台运行</span><br><span class="line"></span><br><span class="line">一般会使用-it参数进入（退出后进程关闭），需要进程持续运行添加-d参数</span><br><span class="line"></span><br><span class="line">docker rm 删除container</span><br><span class="line"></span><br><span class="line">-v 删除本地挂载目录，-f强制删除</span><br><span class="line"></span><br><span class="line">docker rmi 删除image</span><br></pre></td></tr></table></figure><h2 id="docker安装centos"><a href="#docker安装centos" class="headerlink" title="docker安装centos"></a>docker安装centos</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 拉取centos镜像并启动</span></span><br><span class="line">docker pull centos</span><br><span class="line">docker run -itd centos:latest /bin/bash</span><br><span class="line">docker ps</span><br><span class="line">docker <span class="built_in">exec</span> -it &lt;containerId&gt; /bin/bash</span><br><span class="line"></span><br><span class="line"><span class="comment"># 进入centos容器之后的简单配置</span></span><br><span class="line">yum install -y wget</span><br><span class="line">cp /etc/yum.repos.d/CentOS-Base.repo /etc/yum.repos.d/CentOS-Base.repo.bak</span><br><span class="line">wget -O /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-7.repo </span><br><span class="line">wget -P /etc/yum.repos.d/ http://mirrors.aliyun.com/repo/epel-7.repo </span><br><span class="line">yum clean all &amp;&amp; yum makecache</span><br><span class="line">yum update</span><br></pre></td></tr></table></figure><h2 id="centos7安装docker："><a href="#centos7安装docker：" class="headerlink" title="centos7安装docker："></a>centos7安装docker：</h2><p><a href="https://yq.aliyun.com/articles/110806" target="_blank" rel="noopener">https://yq.aliyun.com/articles/110806</a></p><p><em>新手先安装好docker ，然后docker version和docker info看一下，然后看一下菜鸟教程能够有个大致了解即可。老鸟请忽略以上内容。</em></p><p>祝君好运😀</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;docker安装：&quot;&gt;&lt;a href=&quot;#docker安装：&quot; class=&quot;headerlink&quot; title=&quot;docker安装：&quot;&gt;&lt;/a&gt;docker安装：&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://dev.aliyun.com/search.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://dev.aliyun.com/search.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;通过管理中心进去获取自己的&lt;strong&gt;国内镜像加速器&lt;/strong&gt;（注册登录阿里云账号）：&lt;/p&gt;
&lt;img src=&quot;/imgs/docker的安装配置/1.png&quot;&gt;
    
    </summary>
    
      <category term="后端" scheme="https://gengxuelei.github.io/categories/%E5%90%8E%E7%AB%AF/"/>
    
    
      <category term="docker" scheme="https://gengxuelei.github.io/tags/docker/"/>
    
  </entry>
  
  <entry>
    <title>天涯浪逍遥</title>
    <link href="https://gengxuelei.github.io/2017/12/20/%E5%A4%A9%E6%B6%AF%E6%B5%AA%E9%80%8D%E9%81%A5/"/>
    <id>https://gengxuelei.github.io/2017/12/20/天涯浪逍遥/</id>
    <published>2017-12-20T09:42:45.000Z</published>
    <updated>2019-03-20T06:43:51.537Z</updated>
    
    <content type="html"><![CDATA[<div style="text-align:center"><br><br>曾为你画地为牢<br>风也萧萧雨也萧萧<br>中了爱你的蛊怎么逃<br><br>又是一季韶华老<br>鬓发已微醺<br>君未归<br>寂寞心事谁人聊<br><br>犹记当时年少<br>情字刻心头<br>許一世<br>只为君折腰<br><br>如今月已上柳梢<br>人归花向晚<br>整行囊<br>天涯浪逍遥<br></div>]]></content>
    
    <summary type="html">
    
      
      
        &lt;div style=&quot;text-align:center&quot;&gt;&lt;br&gt;&lt;br&gt;曾为你画地为牢&lt;br&gt;风也萧萧雨也萧萧&lt;br&gt;中了爱你的蛊怎么逃&lt;br&gt;&lt;br&gt;又是一季韶华老&lt;br&gt;鬓发已微醺&lt;br&gt;君未归&lt;br&gt;寂寞心事谁人聊&lt;br&gt;&lt;br&gt;犹记当时年少&lt;br&gt;情字刻心头&lt;br&gt;
      
    
    </summary>
    
      <category term="随笔" scheme="https://gengxuelei.github.io/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
  </entry>
  
  <entry>
    <title>hexo搭建小记</title>
    <link href="https://gengxuelei.github.io/2017/12/20/hexo%E6%90%AD%E5%BB%BA%E5%B0%8F%E8%AE%B0/"/>
    <id>https://gengxuelei.github.io/2017/12/20/hexo搭建小记/</id>
    <published>2017-12-20T09:05:39.000Z</published>
    <updated>2019-03-20T06:43:51.536Z</updated>
    
    <content type="html"><![CDATA[<h2 id="搭建过程"><a href="#搭建过程" class="headerlink" title="搭建过程"></a>搭建过程</h2><ol><li><p>首先创建username.github.io的仓库（以username为前缀的话，pages服务只能是master分支）</p></li><li><p>然后创建hexo仓库，用来维护源码 &amp; nuxt主题配置</p></li><li><p>根据博主 <a href="http://shenzekun.cn/" target="_blank" rel="noopener">shenzekun</a> 的 <a href="https://segmentfault.com/a/1190000009544924" target="_blank" rel="noopener">教程</a> 进行配置</p></li><li><p>修改模板文件，更改cdn路径加快国内访问速度</p></li></ol><a id="more"></a><h2 id="替换-googleapis"><a href="#替换-googleapis" class="headerlink" title="替换 googleapis"></a>替换 googleapis</h2><p>LUG@USTC Google Fonts 加速服务：<br><a href="https://lug.ustc.edu.cn/wiki/lug/services/googlefonts" target="_blank" rel="noopener">https://lug.ustc.edu.cn/wiki/lug/services/googlefonts</a></p><table><thead><tr><th style="text-align:left">原地址</th><th style="text-align:left">新地址</th><th style="text-align:left">301地址</th></tr></thead><tbody><tr><td style="text-align:left">fonts.googleapis.com</td><td style="text-align:left">fonts.lug.ustc.edu.cn</td><td style="text-align:left">fonts.proxy.ustclug.org</td></tr><tr><td style="text-align:left">ajax.googleapis.com</td><td style="text-align:left">ajax.lug.ustc.edu.cn</td><td style="text-align:left">ajax.proxy.ustclug.org</td></tr><tr><td style="text-align:left">themes.googleusercontent.com</td><td style="text-align:left">google-themes.lug.ustc.edu.cn</td><td style="text-align:left">google-themes.proxy.ustclug.org</td></tr><tr><td style="text-align:left">fonts.gstatic.com</td><td style="text-align:left">fonts-gstatic.lug.ustc.edu.cn</td><td style="text-align:left">fonts-gstatic.proxy.ustclug.org</td></tr></tbody></table><h2 id="附加资源"><a href="#附加资源" class="headerlink" title="附加资源"></a>附加资源</h2><p>在线沟通：<br><a href="http://daovoice.io/" target="_blank" rel="noopener">http://daovoice.io/</a></p><p>bass服务：<br><a href="https://leancloud.cn/" target="_blank" rel="noopener">https://leancloud.cn/</a></p><p>图标网站1：<br><a href="http://www.easyicon.net/update/" target="_blank" rel="noopener">http://www.easyicon.net/update/</a></p><p>图标网站2：<br><a href="http://fontawesome.io/icons/" target="_blank" rel="noopener">http://fontawesome.io/icons/</a></p><p>hexo系列文章：<br><a href="https://segmentfault.com/u/adam_home" target="_blank" rel="noopener">https://segmentfault.com/u/adam_home</a></p><p>Next主题使用指南：<br><a href="http://theme-next.iissnan.com/getting-started.html" target="_blank" rel="noopener">http://theme-next.iissnan.com/getting-started.html</a></p><p>Hexo博客优化，如何加快你的博客访问速度(精)<br><a href="http://www.joryhe.com/2016-06-05-hexo_site_seo_speed_more_optimization.html" target="_blank" rel="noopener">http://www.joryhe.com/2016-06-05-hexo_site_seo_speed_more_optimization.html</a></p><p>怎样制作属于自己的Live2D角色？<br><a href="https://www.g-cores.com/articles/19597" target="_blank" rel="noopener">https://www.g-cores.com/articles/19597</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;搭建过程&quot;&gt;&lt;a href=&quot;#搭建过程&quot; class=&quot;headerlink&quot; title=&quot;搭建过程&quot;&gt;&lt;/a&gt;搭建过程&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;首先创建username.github.io的仓库（以username为前缀的话，pages服务只能是master分支）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;然后创建hexo仓库，用来维护源码 &amp;amp; nuxt主题配置&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;根据博主 &lt;a href=&quot;http://shenzekun.cn/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;shenzekun&lt;/a&gt; 的 &lt;a href=&quot;https://segmentfault.com/a/1190000009544924&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;教程&lt;/a&gt; 进行配置&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;修改模板文件，更改cdn路径加快国内访问速度&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
      <category term="小记" scheme="https://gengxuelei.github.io/categories/%E5%B0%8F%E8%AE%B0/"/>
    
    
      <category term="hexo" scheme="https://gengxuelei.github.io/tags/hexo/"/>
    
      <category term="github" scheme="https://gengxuelei.github.io/tags/github/"/>
    
  </entry>
  
</feed>
